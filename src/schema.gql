# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserModel {
  id: ID!
  userName: String!
  email: String!
  clerkId: String!
  firstName: String!
  lastName: String!
  password: String!
  phoneNumber: String!
  userBio: String!
  avatar: String!
  avatarThumbnail: String!
  isPro: Boolean!
  isActive: Boolean!
  offerIds: [String!]!
  bookmarks: [String!]!
  conversations: [String!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Offer {
  id: ID!
  authorId: String!
  price: Int!
  plantName: String!
  pictures: [String!]!
  bookmarkedBy: [String!]!
  description: String!
  category: String!
  environment: String!
  health: String!
  pot: Boolean!
  isBookmarked: Boolean
  plantHeight: Int!
  maintenanceDifficultyLevel: String!
  location: String!
  city: String!
  postcode: String!
  region: String!
  latitude: Float!
  longitude: Float!
  isActive: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SuggestionModel {
  id: ID!
  title: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type MessageModel {
  id: ID!
  senderId: String!
  conversationId: String!
  text: String!
  isActive: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SendMessageResponse {
  result: Boolean!
  conversationId: String!
}

type ConversationModel {
  id: ID!
  participantIds: String!
  participants: [UserModel!]!
  offerId: String!
  offer: Offer!
  isActive: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  hello: String!

  """Get List of Offers"""
  OffersList(filters: [String!]!): [Offer!]!

  """Get List of Offers Searched"""
  OffersListSearch(searchInput: String!, filters: [String!]!, environment: String!, offset: Int! = 0, limit: Int! = 10): [Offer!]!
  userDataById(userId: String!): UserModel!
  getBookmarksByUserId(offerId: String!): String!
  userBookmarks: [Offer!]!
  userData: UserModel!

  """Get List of Users with the largest amount of active offers"""
  UsersList: [UserModel!]!

  """Get List of Suggestions"""
  SuggestionsList: [SuggestionModel!]!

  """Get List of Offers and data By Ids"""
  OffersListByIds(offerIds: [String!]!): [Offer!]!
  getIsConversationExisting(userId1: String!, offerId: String!): String!

  """Get all conversations of the authenticated user"""
  UserConversations: [ConversationModel!]!

  """Get List of Messages for a given conversation"""
  MessagesList(conversationId: String!): [MessageModel!]!
}

type Mutation {
  register(newUserInput: RegisterInput!): String!
  updateUserProfile(updateInput: UpdateUserProfileInput!): UserModel!
  createNewOffer(newOfferInput: OfferInput!): String!
  bookmarkOffer(offerId: String!): String!
  sendMessage(newMessageInput: MessageInput!): SendMessageResponse!
  resetDatabase: Boolean!
}

input RegisterInput {
  email: String!
  userName: String!
  avatar: String!
  avatarThumbnail: String!
  userBio: String!
  isPro: Boolean!
  clerkId: String!
}

input UpdateUserProfileInput {
  bio: String
  avatarUrl: String
  avatarThumbnail: String
}

input OfferInput {
  price: Float!
  plantName: String!
  pictures: [String!]!
  description: String!
  category: String!
  environment: String!
  health: String!
  city: String!
  postcode: String!
  region: String!
  location: String!
  latitude: Float!
  longitude: Float!
  maintenanceDifficultyLevel: String!
  pot: Boolean!
  plantHeight: Float!
}

input MessageInput {
  offerId: String!
  existingConversationId: String
  text: String!
}

type Subscription {
  messageAdded(conversationId: String!): MessageModel!
}